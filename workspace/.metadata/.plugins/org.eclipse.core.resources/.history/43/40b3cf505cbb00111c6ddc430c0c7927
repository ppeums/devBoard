package kr.or.nhic.common.tag;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.TagSupport;

public class ButtonTag extends TagSupport {
	/**
	 * 
	 */
	private static final long serialVersionUID = -3471415957411556486L;
	
	private String type = "";
	private String path = "";
	private String text = "";
	private String onclick = "";
	private String targetId = "";

	public int doStartTag() throws JspException {
		JspWriter out = pageContext.getOut();
		StringBuffer html = new StringBuffer();
		
		try {
			if("search".equals(this.getType())) {
				html.append("<input id='" + this.getPath() + "' type='image' class='Limage' src='/images/btn_search.gif' alt='검색' onclick=\"" + this.getOnclick() + "; return false;\"/>");
			} else if("new".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">신규</span></a>");
			} else if("save".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">저장</span></a>");
			} else if("modify".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">수정</span></a>");
			} else if("delete".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">삭제</span></a>");
			} else if("init".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">초기화</span></a>");
			} else if("print".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">출력</span></a>");
			} else if("close".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">닫기</span></a>");
			} else if("previous".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">이전</span></a>");
			} else if("next".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">다음</span></a>");
			} else if("list".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">목록</span></a>");
			} else if("iconSearch".equals(this.getType())) {
				html.append("<input type='image' id='" + this.getPath() + "' class='Limage' src='/images/btn_icon_search.gif' alt='검색' onclick=\""+ this.getOnclick() +"; return false;\" />");
			} else if("calendar".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' href='#' onclick=\"cf_openCalendar( '" + this.getTargetId() + "', event); return false;\">")
				    .append("<img class='Lbtn' src='/images/btn_icon_calendar.gif' alt='날짜' /></a>");
			} else if("addRow".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn3' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">행추가</span></a>");
			} else if("deleteRow".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn3' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">행삭제</span></a>");
			} else if("iconModify".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn3' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">수정</span></a>");
			} else if("downloadExcel".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">엑셀 다운로드</span></a>");
			} else if("uploadExcel".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">엑셀 업로드</span></a>");
			} else if("copy".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn3' href='#'><span onclick=\"" + this.getOnclick() + "; return false;\">복사</span></a>");
			} else if("iconGeneric".equals(this.getType())) {
				html.append("<a id='" + this.getPath() + "' class='Lbtn3' href='#'><span onclick=\"" + this.getOnclick() + "\">" + this.getText() + "</span></a>");
			}
			
			out.print(html.toString());
		} catch (Exception e) {
			throw new JspException(e.getMessage());
		}

		return SKIP_BODY; // no body processing
	}

    // Releases any resources we may have (or inherit)
    public void release() {
    	super.release();
    	
    	type = "";
    	path = "";
    	text = "";
    	onclick = "";
    	targetId = "";
    }

	/**
	 * @return the type
	 */
	public String getType() {
		return type;
	}

	/**
	 * @param type the type to set
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * @return the path
	 */
	public String getPath() {
		return path;
	}

	/**
	 * @param path the path to set
	 */
	public void setPath(String path) {
		this.path = path;
	}

	/**
	 * @return the text
	 */
	public String getText() {
		return text;
	}

	/**
	 * @param text the text to set
	 */
	public void setText(String text) {
		this.text = text;
	}

	/**
	 * @return the onclick
	 */
	public String getOnclick() {
		return onclick;
	}

	/**
	 * @param onclick the onclick to set
	 */
	public void setOnclick(String onclick) {
		this.onclick = onclick;
	}

	/**
	 * @return the targetId
	 */
	public String getTargetId() {
		return targetId;
	}

	/**
	 * @param targetId the targetId to set
	 */
	public void setTargetId(String targetId) {
		this.targetId = targetId;
	}
	
}
