/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package kr.or.nhic.sample.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import kr.or.nhic.framework.util.DateUtil;
import kr.or.nhic.framework.util.MultipartFileUtil;
import kr.or.nhic.framework.view.XmlView;
import kr.or.nhic.framework.vo.FileVO;
import kr.or.nhic.sample.vo.EtcSampleVO;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.servlet.ModelAndView;
import org.springmodules.validation.commons.ConfigurableBeanValidator;


/**  
 * @Class Name : EtcSampleController
 * @Description : EtcSampleController Class
 * @Modification Information  
 * @
 * @  수정일      수정자              수정내용
 * @ ---------   ---------   -------------------------------
 * @ 2009.03.16           최초생성
 * 
 * @author 개발프레임웍크 실행환경 개발팀
 * @since 2009. 03.16
 * @version 1.0
 * @see
 * 
 *  Copyright (C) by MOPAS All right reserved.
 */

@Controller
public class EtcSampleController {
	
	/** Validator */
    @Resource(name = "beanValidator")
	protected ConfigurableBeanValidator beanValidator;
    
    private final Logger logger = Logger.getLogger(this.getClass());
	
    /**
	 * 기타 샘플 페이지를 오픈한다.
	 * @param sampleVO - 조회 조건이 담긴 VO
	 * @param model
	 * @return View
	 * @exception Exception
	 */
    @RequestMapping(value="/sample/retrieveEtcSample.do")
    public String retrieveEtcSample(@ModelAttribute("etcSampleVO") EtcSampleVO etcSampleVO, ModelMap model) throws Exception {
    	List<String> list = new ArrayList<String>();
    	
    	for(int i=0; i<10; i++) {
    		list.add(Integer.toString(i));
    	}
    	
    	EtcSampleVO sampleVO1 = new EtcSampleVO();
    	model.addAttribute("etcSampleVO1", sampleVO1);
    	
    	EtcSampleVO sampleVO2 = new EtcSampleVO();
    	sampleVO2.setDateParam(DateUtil.getToday("yyyyMMdd"));
    	sampleVO2.setYearMonthParam("201106");
    	sampleVO2.setNumberParam(123456789);
    	sampleVO2.setTimeParam("1730");
    	sampleVO2.setSsnParam("1234561234567");
    	sampleVO2.setBrnParam("1234567890");
    	sampleVO2.setMaskParam("AAABB");
    	sampleVO2.setZipParam("123456");
    	
    	model.addAttribute("etcSampleVO2", sampleVO2);
    	model.addAttribute("list", list);
    	
    	EtcSampleVO sampleVO3 = new EtcSampleVO();
    	model.addAttribute("etcSampleVO3", sampleVO3);
    	
        return "/sample/etcSample";
    }
    
    /**
     * AJAX 샘플을 위한 XML 데이터를 조회한다.
     * 
     * @param param
     * @return ModelAndView
     */
    @RequestMapping("/sample/retrieveEtcSampleAjaxData1.do")
    protected ModelAndView retrieveSampleAjaxData1(@RequestParam("level1") String level1) throws Exception {
    	// XML View 설정
    	ModelAndView mav = new ModelAndView(new XmlView());
	    
    	// 실제 이부분은 ServiceImpl을 통해서 데이터를 조회해야 함
	    List<EtcSampleVO> list = new ArrayList<EtcSampleVO>();
	    
	    for(int i=0; i<Integer.parseInt(level1); i++) {
	    	EtcSampleVO vo = new EtcSampleVO();
	    	vo.setName(level1 + "-" + i);
	    	vo.setValue(level1 + "-" + i);
	    	
	    	list.add(vo);
	    }
	    
	    // List일 때는 "list", VO일 때는 "vo"
	    mav.addObject("list", list);
	    
	    return mav;
    }
    
    /**
     * AJAX 샘플을 위한 XML 데이터를 조회한다.
     * 
     * @param param
     * @return ModelAndView
     */
    @RequestMapping("/sample/retrieveEtcSampleAjaxData2.do")
    protected ModelAndView retrieveSampleAjaxData2(@RequestParam("level2") String level2) throws Exception {
    	// XML View 설정
    	ModelAndView mav = new ModelAndView(new XmlView());
	    
    	// 실제 이부분은 ServiceImpl을 통해서 데이터를 조회해야 함
	    List<EtcSampleVO> list = new ArrayList<EtcSampleVO>();
	    
	    String num = level2.substring(2);
	    
	    for(int i=0; i<Integer.parseInt(num); i++) {
	    	EtcSampleVO vo = new EtcSampleVO();
	    	vo.setName(level2 + "-" + i);
	    	vo.setValue(level2 + "-" + i);
	    	
	    	list.add(vo);
	    }
	    
	    // List일 때는 "list", VO일 때는 "vo"
	    mav.addObject("list", list);
	    
	    return mav;
    }
    
    /**
     * Mask 저장을 처리한다.
     * 
     * @param request
     * @param model
     * @return
     * @throws Exception
     */
    @RequestMapping("/sample/insertMask.do")
    public String insertMask(@ModelAttribute("etcSampleVO2") EtcSampleVO etcSampleVO,
    		BindingResult bindingResult, ModelMap model) throws Exception {
    	logger.debug(etcSampleVO);
    	
    	beanValidator.setFormName("etcSampleVO2");
    	beanValidator.validate(etcSampleVO, bindingResult);
    	
		if (bindingResult.hasErrors()) {
			List<String> list = new ArrayList<String>();
	    	
	    	for(int i=0; i<10; i++) {
	    		list.add(Integer.toString(i));
	    	}
	    	
	    	EtcSampleVO etcSampleVO1 = new EtcSampleVO();
	    	model.addAttribute("etcSampleVO1", etcSampleVO1);
	    	
	    	model.addAttribute("list", list);
	    	
	    	EtcSampleVO etcSampleVO3 = new EtcSampleVO();
	    	model.addAttribute("etcSampleVO3", etcSampleVO3);
	    	
			return "sample/etcSample";
		}
		
		return "forward:/sample/retrieveEtcSample.do";
    }
    
    /**
     * 파일 업로드를 처리한다.
     * 
     * @param request
     * @param model
     * @return
     * @throws Exception
     */
    @RequestMapping("/sample/insertFiles.do")
    public String insertFiles(HttpServletRequest request, ModelMap model) throws Exception {
        List<FileVO> fileList = MultipartFileUtil.getFileList(request, "sample");
    	
    	for(FileVO fileVO : fileList) {
    		logger.debug(fileVO.toString());
    	}
    	
		return "forward:/sample/retrieveEtcSample.do";
    }

}
