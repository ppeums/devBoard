#if($tcPackage_package != "")
package ${tcPackage_package};
#end

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.annotation.Resource;
import javax.sql.DataSource;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.transaction.TransactionConfiguration;
import org.springframework.transaction.annotation.Transactional;

// TODO 필요할 경우, 스프링 컨텍스트/트랜잭션 등의 설정을 적용한다.
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath*:META-INF/spring/context-*.xml" })
@TransactionConfiguration(transactionManager = "txManager", defaultRollback = false)
@Transactional
public class ${targetDAO.name}Test {

#if(${dataSourceName} != "")
    @Resource(name = "${dataSourceName}")
    protected DataSource ${dataSourceName};
#end

    @Resource(name = "$stringUtils.uncapitalize($targetDAO.name)")
    ${targetDAO.name} $stringUtils.uncapitalize($targetDAO.name);
        
    // TODO 필요할 경우, 스프링 ApplicationContext을 선언한다.
    @Autowired
    ApplicationContext aplicationContext;
    
    // TODO VO를 사용한 경우, 관련 VO들을 선언한다.
    NoticeVo testNoticeVo;
    
    // TODO VO를 사용한 경우, 테스트에 사용할 VO들을 생성한다.
    @Before
    public void createTestNoticeVo() {
    	try {
    		testNoticeVo = (NoticeVo) aplicationContext.getBean("testNoticeVo");
    		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", java.util.Locale.getDefault());
    		testNoticeVo.setRegistrationDate(sdf.parse("2009-03-31"));
    	}
    	catch(ParseException e) {
    		fail(e.getMessage());
    	}
    }
    
    // TODO 필요할 경우, 관련 자원들을 확인하고 테스트 한다.
    @Test
    public void check() {
    	assertNotNull(noticeDao);
    	assertNotNull(testNoticeVo);
    }

    /**
     * TODO ${targetDAO.name}의 메소드를 테스트하기 위한 코드를 작성한다.
    */
    public void testMethodA() {
    	
    }

    /**
     * TODO ${targetDAO.name}의 메소드를 테스트하기 위한 코드를 작성한다.
    */
    public void testMethodZ() {
    	
    }
}
